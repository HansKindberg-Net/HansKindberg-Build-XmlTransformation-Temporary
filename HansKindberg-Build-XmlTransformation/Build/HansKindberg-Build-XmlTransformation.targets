<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<IsWebApplicationProject Condition="$(IsWebApplicationProject) == '' AND $(WebApplicationProjectTypeGuid) != '' AND $(ProjectTypeGuids) != ''">$(ProjectTypeGuids.Contains($(WebApplicationProjectTypeGuid)))</IsWebApplicationProject>
		<IsWebApplicationProject Condition="$(IsWebApplicationProject) == ''">False</IsWebApplicationProject>
	</PropertyGroup>
	<PropertyGroup>
		<!-- Output path to use for transformed App.config. -->
		<XmlTransformationIntermediate Condition="$(XmlTransformationIntermediate) == ''">$(IntermediateOutputPath)XmlTransformation\</XmlTransformationIntermediate>
		<!-- For webapplication projects we want the destination directory to be an empty string. -->
		<XmlTransformationOnBuildDestinationDirectory Condition="$(XmlTransformationOnBuildDestinationDirectory) == '' And $(IsWebApplicationProject) == 'False'">$(OutDir)</XmlTransformationOnBuildDestinationDirectory>
	</PropertyGroup>
	<UsingTask AssemblyFile="$(MicrosoftWebPublishingTasksAssemblyFile)" Condition="!$(IsWebApplicationProject)" TaskName="Microsoft.Web.Publishing.Tasks.TransformXml" />
	<PropertyGroup>
		<BuildDependsOn Condition="$(TransformOnBuild)">
			$(BuildDependsOn);
			TransformXmlFiles;
		</BuildDependsOn>
	</PropertyGroup>
	<PropertyGroup>
		<CollectFilesForProfileTransformWebConfigsDependsOn>
			CollectXmlFilesToTransformOnPublishProfile;
			$(CollectFilesForProfileTransformWebConfigsDependsOn);
		</CollectFilesForProfileTransformWebConfigsDependsOn>
	</PropertyGroup>
	<Target Name="CollectFilesForProfileTransformWebConfigs" DependsOnTargets="$(CollectFilesForProfileTransformWebConfigsDependsOn)" Condition="'$(CollectFilesForProfileTransformWebConfigs)' != 'false'">
		<ItemGroup>
			<ProfileWebConfigsToTransform Include="@(XmlFileToTransformOnPublishProfile)">
				<TransformFile>%(Transform)</TransformFile>
				<TransformFileFolder>$(ProfileTransformWebConfigIntermediateLocation)\assist</TransformFileFolder>
				<TransformOriginalFolder>$(ProfileTransformWebConfigIntermediateLocation)\original</TransformOriginalFolder>
				<TransformOutputFile>%(Destination)</TransformOutputFile>
				<TransformScope>$([System.IO.Path]::GetFullPath('$(WPPAllFilesInSingleFolder)\%(DestinationRelativePath)'))</TransformScope>
			</ProfileWebConfigsToTransform>
			<_ProfileWebConfigsToTransformOuputs Include="@(ProfileWebConfigsToTransform->'%(TransformOutputFile)')" />
		</ItemGroup>
		<CallTarget Targets="$(OnAfterCollectFilesForProfileTransformWebConfigs)" RunEachTargetSeparately="False" />
	</Target>
	<PropertyGroup>
		<CollectWebConfigsToTransformDependsOn>
			CollectXmlFilesToTransformOnPublishBuild;
			$(CollectWebConfigsToTransformDependsOn);
		</CollectWebConfigsToTransformDependsOn>
	</PropertyGroup>
	<Target Name="CollectWebConfigsToTransform" DependsOnTargets="$(CollectWebConfigsToTransformDependsOn)" Condition="'$(CollectWebConfigsToTransform)' != 'false'">
		<ItemGroup>
			<WebConfigsToTransform Include="@(XmlFileToTransformOnPublishBuild)">
				<TransformFile>%(Transform)</TransformFile>
				<TransformFileFolder>$(TransformWebConfigIntermediateLocation)\assist</TransformFileFolder>
				<TransformOriginalFolder>$(TransformWebConfigIntermediateLocation)\original</TransformOriginalFolder>
				<TransformOutputFile>%(Destination)</TransformOutputFile>
				<TransformScope>$([System.IO.Path]::GetFullPath('$(WPPAllFilesInSingleFolder)\%(DestinationRelativePath)'))</TransformScope>
			</WebConfigsToTransform>
			<_WebConfigsToTransformOuputs Include="@(WebConfigsToTransform->'%(TransformOutputFile)')" />
		</ItemGroup>
		<CallTarget Targets="$(OnAfterCollectWebConfigsToTransform)" RunEachTargetSeparately="False" />
	</Target>
	<PropertyGroup>
		<CollectXmlFilesToTransformOnBuildDependsOn></CollectXmlFilesToTransformOnBuildDependsOn>
	</PropertyGroup>
	<Target Name="CollectXmlFilesToTransformOnBuild" DependsOnTargets="$(CollectXmlFilesToTransformOnBuildDependsOn)">
		<CollectBuildTransformation
			AppConfigDestinationDirectory="$(XmlTransformationIntermediate)"
			DestinationDirectory="$(XmlTransformationOnBuildDestinationDirectory)"
			ExcludeFilesDependentUpon="$(XmlTransformationExcludeFilesDependentUpon)"
			ExcludeFilesDependentUponByFileName="$(XmlTransformationExcludeFilesDependentUponByFileName)"
			Files="@(Content);@(EmbeddedResource);@(None);@(Resource)"
			LogImportance="$(XmlTransformationLogImportance)"
			TransformName="$(Configuration)"
			XmlFileExtensions="@(XmlFileExtension)"
			XmlTransformationMaps="@(XmlTransformationMap)"
		>
			<Output TaskParameter="FilesToTransform" ItemName="XmlFileToTransformOnBuild" />
		</CollectBuildTransformation>
		
		
		
			
			
			
		<Message
			Importance="high"
			Text="------------------------------------------- (before) AppConfig = '$(AppConfig)'"
		/>
		
		
		
		
		
			
		
		<ItemGroup>
			<_AppConfigToTransformOnBuild Include="@(XmlFileToTransformOnBuild)" Condition="%(IsAppConfig) == 'true'" />
		</ItemGroup>
		<PropertyGroup>
			<AppConfig Condition="@(_AppConfigToTransformOnBuild) != ''">$(XmlTransformationIntermediate)App.config</AppConfig>
		</PropertyGroup>







		<Message
	Importance="high"
	Text="------------------------------------------- _AppConfigToTransformOnBuild = '@(_AppConfigToTransformOnBuild)'"
		/>	
			
		<Message
			Importance="high"
			Text="------------------------------------------- (after) AppConfig = '$(AppConfig)'"
		/>
			
			
			
			
			
			
	</Target>
	<PropertyGroup>
		<CollectXmlFilesToTransformOnPublishBuildDependsOn></CollectXmlFilesToTransformOnPublishBuildDependsOn>
	</PropertyGroup>
	<Target Name="CollectXmlFilesToTransformOnPublishBuild" DependsOnTargets="$(CollectXmlFilesToTransformOnPublishBuildDependsOn)">




		<Message
			Importance="high"
			Text="------------------------------------------- FilesForPackagingFromProject = '%(FilesForPackagingFromProject.Identity)'"
		/>







		<CollectBuildTransformation
			DestinationDirectory="$(TransformWebConfigIntermediateLocation)\transformed"
			ExcludeFilesDependentUpon="$(XmlTransformationExcludeFilesDependentUpon)"
			ExcludeFilesDependentUponByFileName="$(XmlTransformationExcludeFilesDependentUponByFileName)"
			Files="@(FilesForPackagingFromProject)"
			LogImportance="$(XmlTransformationLogImportance)"
			TransformName="$(Configuration)"
			XmlFileExtensions="@(XmlFileExtension)"
			XmlTransformationMaps="@(XmlTransformationMap)"
		>
			<Output TaskParameter="FilesToTransform" ItemName="XmlFileToTransformOnPublishBuild" />
		</CollectBuildTransformation>
	</Target>
	<PropertyGroup>
		<CollectXmlFilesToTransformOnPublishProfileDependsOn></CollectXmlFilesToTransformOnPublishProfileDependsOn>
	</PropertyGroup>
	<Target Name="CollectXmlFilesToTransformOnPublishProfile" DependsOnTargets="$(CollectXmlFilesToTransformOnPublishProfileDependsOn)">
		<CollectPublishTransformation
			DestinationDirectory="$(ProfileTransformWebConfigIntermediateLocation)\transformed"
			ExcludeFilesDependentUpon="$(XmlTransformationExcludeFilesDependentUpon)"
			ExcludeFilesDependentUponByFileName="$(XmlTransformationExcludeFilesDependentUponByFileName)"
			Files="@(FilesForPackagingFromProject)"
			LogImportance="$(XmlTransformationLogImportance)"
			TransformName="$(PublishProfileName)"
			XmlFileExtensions="@(XmlFileExtension)"
			XmlTransformationMaps="@(XmlTransformationMap)"
		>
			<Output TaskParameter="FilesToTransform" ItemName="XmlFileToTransformOnPublishProfile" />
		</CollectPublishTransformation>
	</Target>
	<PropertyGroup>
		<TransformXmlFilesDependsOn>
			CollectXmlFilesToTransformOnBuild;
		</TransformXmlFilesDependsOn>
	</PropertyGroup>
	<Target
		Name="TransformXmlFiles"
		DependsOnTargets="$(TransformXmlFilesDependsOn)"
	>
		<!--
		<TransformXml
			Condition="%(XmlFileToTransformOnBuild.PreTransform) != ''"
			Destination="%(XmlFileToTransformOnBuild.Destination)"
			Source="%(XmlFileToTransformOnBuild.PreTransformSource)"
			Transform="%(XmlFileToTransformOnBuild.PreTransform)"
		/>
		-->
		<Message
			Condition="%(XmlFileToTransformOnBuild.PreTransform) != ''"
			Importance="$(MessageImportance)"
			Text="Pre-transformed %(XmlFileToTransformOnBuild.PreTransformSource) using %(XmlFileToTransformOnBuild.PreTransform) into %(XmlFileToTransformOnBuild.Destination)."
		/>
		<!--
		<TransformXml
			Destination="%(XmlFileToTransformOnBuild.Destination)"
			Source="%(XmlFileToTransformOnBuild.Identity)"
			Transform="%(XmlFileToTransformOnBuild.Transform)"
		/>
		-->
		<Message
			Importance="$(MessageImportance)"
			Text="Transformed %(XmlFileToTransformOnBuild.Identity) using %(XmlFileToTransformOnBuild.Transform) into %(XmlFileToTransformOnBuild.Destination)."
		/>
	</Target>
</Project>